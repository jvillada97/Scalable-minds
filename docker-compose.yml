networks:
  pulsar:
    driver: bridge

services:

  # Pulsar stand oalone
  pulsar:
    image: apachepulsar/pulsar:3.2.0
    container_name: pulsar
    restart: on-failure
    ports:
      - "6650:6650"
      - "8080:8080"
    environment:
      PULSAR_MEM: "-Xms512m -Xmx512m"
    command: ["bin/pulsar", "standalone"]
    networks:
      - pulsar
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/admin/v2/clusters || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  postgres:
    image: postgres:alpine
    container_name: postgres
    ports:
      - "5432:5432"
    networks:
      - pulsar
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 5s
      retries: 5

  # Servicios de Proveedores Alpes
  imagenes_medicas:
    container_name: imagenes_medicas
    hostname: imagenes_medicas
    restart: on-failure
    build:
      context: .
      dockerfile: imagen_medica.Dockerfile
    environment:
      - BROKER_HOST=pulsar
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
    ports:
      - "5001:5001"
    networks:
      - pulsar
    depends_on:
      postgres:
        condition: service_healthy
      pulsar:
        condition: service_healthy

  # Servicios de Anonimizaci√≥n de Datos
  anonimizacion_datos:
    container_name: anonimizacion_datos
    hostname: anonimizacion_datos
    restart: on-failure
    build:
      context: .
      dockerfile: anonimizacion.Dockerfile
    environment:
      - BROKER_HOST=pulsar
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
    ports:
      - "5003:5003"
    networks:
      - pulsar
    depends_on:
      postgres:
        condition: service_healthy
      pulsar:
        condition: service_healthy

# Servicios de Proveedores
  proveedores_alpes:
    container_name: proveedores_alpes
    hostname: proveedores_alpes
    restart: on-failure
    build:
      context: .
      dockerfile: proveedor.Dockerfile
    environment:
      - BROKER_HOST=pulsar
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
    ports:
      - "5002:5002"
    networks:
      - pulsar
    depends_on:
      postgres:
        condition: service_healthy
      pulsar:
        condition: service_healthy

